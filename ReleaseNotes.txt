====================================================================================
KEROSENE ORM
Copyright (c) Moises Barba Cebeira 2008-2015. All rights reserved.
====================================================================================
VERSION 7.2.0:
-------------------
-	General code refactoring.
VERSION 7.0.5:
-------------------
-	Factories are deprecated in this version and their functionality is moved into
	the core api classes that represent them. For intance, the 'EngineFactory'
	functionality is moved into the 'DataEngine' class, and so on.
-	EngineFactory: deprecated, references to it must be substituted with references
	to DataEngine.
-	LinkFactory: deprecated, references to it must be substituted with references
	to DataLink.
-------------------
-	Configuration: refactoring on how the 'keroseneORM' entries are organized in the
	configuration files. Now there are three main sections: 'dataEngine', 'dataLink'
	and 'dataMap' each carrying the properties that apply. See the documentation for
	further detauls. The 'customEngines' section is maintained with the same structure
	and properties as previous versions.
-	IDataEngine: has not a public CreateParser() method any longer as parsers should
	be owned by their engines only. Instead they have a Parser property that holds
	the appropriate parser for that engine.
-	IDataLink: they do not have a 'Parser' property any longer, must use the one
	carried by their associated engine.
-	IElementAliasProvider: renamed to IElementAliasCollectionProvider.
-	ISchemaEntry: for clarity reasons all operatoins related to the entry's metadata
	have been moved into an expanded 'Metadata' property. Similarly, all operations
	related to the standard properties' tags have been moved to a 'Tags' one.
-	Parser: now supports an 'InList()' and 'NotInList()' virtual extension method
	that accept an enumerable argument containing the actual arguments to inject into
	the parsed SQL command text.
-	DataLink: included the mechanism to retry a number of times to open the underlying
	connection and the interval to wait among them in case of errors.
-------------------
-	Maps can now optionally not to keep track of the entities they have managed,
	using the 'TrackEntities' flag. Entities not tracked still keep their metadata and
	act upon it, but cannot be found in the caches.
-	IDataRepository: maps' management is achieved now by using the 'Maps' collection
	or the 'LocateMap()' methods. All other old mechanisms (as the 'RetrieveMap' one)
	have been removed from this version.
-	IDataRepository/IDataMap: 'ClearEntities()' now carry a boolean argument that
	indicates whether the entities found in the cache are to be forcibly detached from
	the map or not. If not, they are removed from the cache but keep all the metadata
	they may have before. Note that any entity not kept in the cache, as those not
	tracked, is not affected.
====================================================================================
